name: Accessibility (a11y) Tests

on:
    push:
        branches:
            - master
#    pull_request:

jobs:
    a11y_tests:
        strategy:
            fail-fast: false
            matrix:
                php-version: ['8.0']
                node-version: ['12.22']
                actions:
                    -
                        name: Run pa11yci
                        run: npm run a11y:ci

        name: ${{ matrix.actions.name }}
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v4

            # see https://github.com/actions/starter-workflows/blob/main/ci/node.js.yml
            -
                name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v4
                with:
                    node-version: ${{ matrix.node-version }}
#                    coverage: none
            -   name: Use PHP ${{ matrix.php-version }}
                uses: shivammathur/setup-php@v2
                with:
                    # test the lowest version, to make sure checks pass on it
                    php-version: ${{ matrix.php-version }}
                    extensions: json, mbstring, pdo, curl, pdo_sqlite
                    coverage: none
                    tools: composer
            -   run: |
                    wget https://get.symfony.com/cli/installer -O - | bash
            -   name: Install dependencies
                run: |
                    export PATH="$HOME/.symfony5/bin:$PATH"
                    COMPOSER_MEMORY_LIMIT=-1 COMPOSER_PROCESS_TIMEOUT=60 composer update --prefer-dist --no-progress	
                    symfony console bolt:info	--ansi
                    npm set progress=false	
                    npm ci	
            -   name: Prepare environment
                run: |
                    export PATH="$HOME/.symfony5/bin:$PATH"
                    # build assets	
                    npm run build
                    sudo chmod -R 777 config/ public/files/ public/theme/ public/thumbs/ var/	
                    # prepare web server for e2e tests	
                    symfony console doctrine:database:create	
                    symfony console doctrine:schema:create	
                    symfony console doctrine:fixtures:load --group=without-images -n	
                    symfony server:start --no-tls --port=8088 -d
                    # test if web server works	
                    sleep 3	
                    wget "http://127.0.0.1:8088/bolt/login"

            -   run: ${{ matrix.actions.run }}
